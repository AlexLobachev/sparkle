--DROP TABLE IF EXISTS users CASCADE;
--DROP TABLE IF EXISTS cities CASCADE;
--DROP TABLE IF EXISTS matches CASCADE;
--DROP TABLE IF EXISTS messages CASCADE;
--DROP TABLE IF EXISTS photos CASCADE;
--DROP TABLE IF EXISTS user_interests CASCADE;
--DROP TABLE IF EXISTS user_photo CASCADE;
--CREATE TABLE cities
--(
--    id        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--    city_name varchar(50) NOT NULL,
--    latitude  float,
--    longitude float
--);
--
--CREATE TABLE users
--(
--    id         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--    username   varchar(50) NOT NULL,
--    email      varchar(30) UNIQUE,
--    gender     varchar(10),
--    birth_date date,
--    about_me   varchar(200),
--    city_id    INTEGER REFERENCES cities (id)
--);
--
--
--CREATE TABLE matches
--(
--    id             INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--    created_at     date,
--    first_user_id  INTEGER REFERENCES users (id),
--    second_user_id INTEGER REFERENCES users (id)
--);
--CREATE TABLE messages
--(
--    id       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--    content  varchar(300),
--    sent_at  date,
--    sender   INTEGER REFERENCES users (id),
--    receiver INTEGER REFERENCES users (id),
--    match    INTEGER REFERENCES matches (id)
--);
--
--CREATE TABLE photos
--(
--    id        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--    file_path varchar(500),
--    file_name varchar(255),
--    file_size int,
--    file_type varchar(10)
--);
--
--CREATE TABLE user_photo
--(
--    id       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--    user_id  int,
--    photo_id int,
--    FOREIGN KEY (user_id) REFERENCES users (id),
--    FOREIGN KEY (photo_id) REFERENCES photos (id)
--);
--
--
--CREATE TABLE user_interests
--(
--    id       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--    user_id  int,
--    interest varchar(20),
--    FOREIGN KEY (user_id) REFERENCES users (id)
--
--);
--
--
--SELECT u.*
--FROM users u
--         JOIN user_interests ui on u.id = ui.user_id
--WHERE interest IN (SELECT interest
--                   FROM user_interests
--                   GROUP BY interest
--                   HAVING COUNT(*) > 1)
--GROUP BY u.id
--;


SELECT *
FROM users;


--SELECT u.*
--FROM users u
--         JOIN user_interests ui on u.id = ui.user_id
--WHERE interest IN (SELECT interest
--                   FROM user_interests
--                   WHERE interest = 'TRAVEL'
--                   GROUP BY interest
--                   HAVING COUNT(*) > 1)
--GROUP BY u.id





